{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MOEED RAFIQUE\\\\react-todo\\\\todo\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport requests from './requests';\nimport './Row.css';\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"row__poster\",\n        src: `${base_url}${isLargeRowmovie.poster_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/MOEED RAFIQUE/react-todo/todo/src/Row.js"],"names":["React","useState","useEffect","axios","requests","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","table","map","movie","isLargeRowmovie","poster_path","name","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAb,EAA8C;AAAA;;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,SAAf,GAA2B;AACvB,YAAMC,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUN,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GAPQ,EAON,CAACJ,QAAD,CAPM,CAAT;AAQAS,EAAAA,OAAO,CAACC,KAAR,CAAcR,MAAd;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKG,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACb;AAEA,QAAA,SAAS,EAAC,aAFV;AAEwB,QAAA,GAAG,EAAG,GAAEf,QAAS,GAAEgB,eAAe,CAACC,WAAY,EAFvE;AAE0E,QAAA,GAAG,EAAEF,KAAK,CAACG;AAFrF,SACOH,KAAK,CAACI,EADb;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA1BQlB,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Row.css';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    console.table(movies);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h1>{title}</h1>\r\n\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img \r\n                    key = {movie.id}\r\n                    className=\"row__poster\" src={`${base_url}${isLargeRowmovie.poster_path}`} alt={movie.name}/>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}