{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"C:/Users/MOEED RAFIQUE/react-todo/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/MOEED RAFIQUE/react-todo/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/MOEED RAFIQUE/react-todo/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'./axios';import requests from'./requests';import'./Row.css';var base_url=\"https://image.tmdb.org/t/p/original/\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);console.table(movies);return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h1\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{className:\"row__poster \".concat(isLargeRow&&\"row__posterLarge\"),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})})]});}export default Row;","map":{"version":3,"sources":["C:/Users/MOEED RAFIQUE/react-todo/todo/src/Row.js"],"names":["React","useState","useEffect","axios","requests","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","get","request","data","results","console","table","map","movie","poster_path","backdrop_path","name","id"],"mappings":"4iBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA0C,OAA1C,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAO,WAAP,CAEA,GAAMC,CAAAA,QAAQ,CAAG,sCAAjB,CAEA,QAASC,CAAAA,GAAT,MAA8C,IAA/BC,CAAAA,KAA+B,MAA/BA,KAA+B,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,UAAc,MAAdA,UAAc,eACdR,QAAQ,CAAC,EAAD,CADM,wCACnCS,MADmC,eAC3BC,SAD2B,eAE1CT,SAAS,CAAC,UAAM,SACGU,CAAAA,SADH,qIACZ,qKAC0BT,CAAAA,KAAK,CAACU,GAAN,CAAUL,QAAV,CAD1B,QACUM,OADV,eAEIH,SAAS,CAACG,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CAFJ,gCAGWF,OAHX,wDADY,4CAMZF,SAAS,GACZ,CAPQ,CAON,CAACJ,QAAD,CAPM,CAAT,CAQAS,OAAO,CAACC,KAAR,CAAcR,MAAd,EAEA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,oBAAKH,KAAL,EADJ,cAGI,YAAK,SAAS,CAAC,cAAf,UACKG,MAAM,CAACS,GAAP,CAAW,SAAAC,KAAK,qBACb,YAEA,SAAS,uBAAiBX,UAAU,EAAI,kBAA/B,CAFT,CAGA,GAAG,WAAKJ,QAAL,SAAgBI,UAAU,CAAGW,KAAK,CAACC,WAAT,CAAuBD,KAAK,CAACE,aAAvD,CAHH,CAG2E,GAAG,CAAEF,KAAK,CAACG,IAHtF,EACOH,KAAK,CAACI,EADb,CADa,EAAhB,CADL,EAHJ,GADJ,CAeH,CAED,cAAelB,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Row.css';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    console.table(movies);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h1>{title}</h1>\r\n\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img \r\n                    key = {movie.id}\r\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} \r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}