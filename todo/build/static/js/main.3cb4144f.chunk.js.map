{"version":3,"sources":["axios.js","requests.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchDocumentaries","fetchKids","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","console","table","className","map","movie","src","poster_path","backdrop_path","alt","name","id","Banner","str","n","setMovie","Math","floor","random","length","log","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAMeA,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,iCCHPC,EAAU,mCAcDC,EAXE,CACbC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,wBAAD,OAA0BH,EAA1B,sBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,mBAClBS,UAAU,2BAAD,OAA6BT,EAA7B,0E,MCyBEU,MA7Bf,YAA+C,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAAc,EACdC,mBAAS,IADK,mBACnCC,EADmC,KAC3BC,EAD2B,KAY1C,OAVAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC0BrB,EAAMsB,IAAIP,GADpC,cACUQ,EADV,OAEIJ,EAAUI,EAAQC,KAAKC,SAF3B,kBAGWF,GAHX,4CADY,uBAAC,WAAD,wBAMZG,KACD,CAACX,IACJY,QAAQC,MAAMV,GAGV,sBAAKW,UAAU,MAAf,UACI,6BAAKf,IAEL,qBAAKe,UAAU,eAAf,SACKX,EAAOY,KAAI,SAAAC,GAAK,OACb,qBAEAF,UAAS,sBAAiBb,GAAc,oBACxCgB,IAAG,UAvBN,wCAuBM,OAAgBhB,EAAae,EAAME,YAAcF,EAAMG,eAAiBC,IAAKJ,EAAMK,MAF/EL,EAAMM,a,MC0BlBC,MA/Cf,WAAmB,IAgBGC,EAAKC,EAhBT,EACYvB,mBAAS,IADrB,mBACPc,EADO,KACAU,EADA,KAoBd,OAlBArB,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC0BrB,EAAMsB,IAAIlB,EAASE,uBAD7C,cACUiB,EADV,OAEIkB,EACIlB,EAAQC,KAAKC,QACTiB,KAAKC,MAAMD,KAAKE,SAAWrB,EAAQC,KAAKC,QAAQoB,OAAS,KAJrE,kBAOWtB,GAPX,4CADY,uBAAC,WAAD,wBAUZG,KACD,IACHC,QAAQmB,IAAIf,GAOR,yBAAQF,UAAU,SACdkB,MAAO,CACHC,eAAgB,QAChBC,gBAAgB,kEAAD,cAC4BlB,QAD5B,IAC4BA,OAD5B,EAC4BA,EAAOG,cADnC,wBAGfgB,mBAAoB,iBAN5B,UAQI,sBAAKrB,UAAU,mBAAf,UACA,8BAAU,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOK,QAAvB,OAA+BL,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOoB,iBAE3C,sBAAKtB,UAAU,kBAAf,UACI,wBAAQA,UAAU,iBAAlB,kBACA,wBAAQA,UAAU,iBAAlB,wBAEJ,oBAAIA,UAAU,sBAAd,UApBUU,EAoBmC,OAACR,QAAD,IAACA,OAAD,EAACA,EAAOqB,SApBtCZ,EAoBgD,KAnBzD,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,QAASL,EAAID,EAAIc,OAAO,EAAGb,EAAE,GAAK,MAAQD,QAsBlD,qBAAKV,UAAU,2B,MCpBZyB,MArBf,WAAgB,IAAD,EACgBrC,oBAAS,GADzB,mBACJsC,EADI,KACEC,EADF,KAYX,OAVApC,qBAAU,WAMN,OALAqC,OAAOC,iBAAiB,UAAU,WAC1BD,OAAOE,QAAU,IACjBH,GAAW,GACRA,GAAW,MAEf,WACHC,OAAOG,oBAAoB,aAEhC,IAEC,qBAAK/B,UAAS,cAAS0B,GAAQ,cAA/B,SACI,qBAAK1B,UAAU,YACfG,IAAI,uHCMD6B,MAlBf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAKf,MAAM,oBACXC,SAAUX,EAASE,sBAAuBU,YAAY,IACtD,cAAC,EAAD,CAAKF,MAAM,eAAcC,SAAUX,EAASC,gBAC5C,cAAC,EAAD,CAAKS,MAAM,YAAWC,SAAUX,EAASG,gBACzC,cAAC,EAAD,CAAKO,MAAM,gBAAeC,SAAUX,EAASI,oBAC7C,cAAC,EAAD,CAAKM,MAAM,cAAaC,SAAUX,EAASQ,YAC3C,cAAC,EAAD,CAAKE,MAAM,gBAAeC,SAAUX,EAASK,oBAC7C,cAAC,EAAD,CAAKK,MAAM,gBAAeC,SAAUX,EAASM,oBAC7C,cAAC,EAAD,CAAKI,MAAM,gBAAeC,SAAUX,EAASO,yBCPpCmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3cb4144f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","const API_KEY = \"a6cf565ec8ec18337d1035e9dd0506b5\";\r\n\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-us`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-us`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchKids: `/discover/movie?api_key=${API_KEY}&certification_country=US&certification.lte=G&sort_by=popularity.desc`,\r\n}\r\n\r\nexport default requests;","import React, { useState, useEffect} from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Row.css';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    console.table(movies);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h1>{title}</h1>\r\n\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img \r\n                    key = {movie.id}\r\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} \r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React, { useState, useEffect} from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css'\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    console.log(movie);\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{ \r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\r\n                    \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n                )`,\r\n                backgroundPosition: \"center center\",\r\n            }}>\r\n            <div className=\"banner__contents\">\r\n            <h1>{movie?.title || movie?.name || movie?.original_name}</h1>\r\n            \r\n            <div className=\"banner__buttons\">\r\n                <button className=\"banner__button\">Play</button>\r\n                <button className=\"banner__button\">My List</button>\r\n            </div>\r\n            <h1 className=\"banner__description\">{truncate(movie?.overview, 150)}</h1>\r\n            </div>\r\n\r\n            <div className=\"banner--fadeBottom\"></div>\r\n        </header>\r\n        \r\n            \r\n        \r\n    );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect} from 'react'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                handleShow(true);\r\n            } else handleShow(false);  \r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    }, []);\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img className=\"nav__logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/799px-Netflix_2015_logo.svg.png\"></img>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import './App.css';\nimport Row from './Row';\nimport requests from './requests'\nimport Banner from './Banner'\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner/>\n      <Row title=\"NETFLIX ORIGINALS\" \n      fetchUrl={requests.fetchNetflixOriginals} isLargeRow={true}/>\n      <Row title=\"Trending Now\"fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\"fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\"fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Kids Movies\"fetchUrl={requests.fetchKids}/>\n      <Row title=\"Comedy Movies\"fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\"fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Documentaries\"fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}